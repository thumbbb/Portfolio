! function (s) { "use strict"; function n (t, e) {this.element = t, this.options = s.extend ({}, o, e), this._defaults = o, this._name = i, this._centered =! 1, this._zoomed =! 1, this.init ()} var i = "mapify", o = {콜백 :! 1, center :! 1, key :! 1, 옵션 : {}, 포인트 : [], responsive :! 1, zoom :! 1}, t = "mapifyWindowResized", e =! 1; n.loaded =! 1, n.prototype.init = function () {this._styles = s (this.element) .attr ( "style"), this._content = s (this.element) .html (), this.load ()}, n.prototype.load = function () {if ( " undefined "! = typeof google && void 0! == google.maps) return n.loaded =! 0, this.draw (); if (void 0 === window.mapifyMaps && (window.mapifyMaps = []), window.mapifyMaps .push (this) ,! n.loaded) {var t = "// maps.googleapis.com/maps/api/js";t+="?v=3.31",t=(t+="&callback=mapifyInit" ) + "& key ="+ this.options.key, s.getScript (t),n.loaded =! 0}}, n.prototype.draw = function () {var o = this; o.map = new google.maps.Map (o.element), o.bounds = new google.maps.LatLngBounds , o.map.setOptions (o.options.options), s.each (o.options.points, function (t, e) {o.insertPoint (e)}), o.zoom (), o.options. responsive && s (window) .on (t, function () {o.zoom ()}), o.options.callback && o.options.callback (o)}, n.prototype.zoom = function () {var t = this, e = t.options.center, o = t.options.zoom; t.map.fitBounds (t.bounds), e && void 0! == e.lat && void 0! == e.lng && (t.map.setCenter (e ), t.map.addListener ( "bounds_changed", function () {t._centered || (t.map.setCenter (e), t._centered =! 0)})), o && (t.map.setZoom ( o), t.map.addListener ( "bounds_changed", function () {t._zoomed || (t.map.setZoom (o), t._zoomed =! 0)}))}, n.prototype.insertPoint = function (t) {var e = this, o = s.extend ({lat :! 1, lng :! 1, marker :! 1, title :! 1,infoWindow :! 1}, t); if (o.lat && o.lng) {var n = new google.maps.LatLng ({lat : o.lat, lng : o.lng}); if (e.bounds.extend (n), o.marker) {var i = new google.maps.Marker ({map : e.map, position : n}); if ( "string"=== s.type (o.marker) && i. setIcon (o.marker), o.title && i.setTitle (o.title), o.infoWindow) {var a = new google.maps.InfoWindow ({content : o.infoWindow}); i.addListener ( "click", function () {a.open (e.map, i)})}}}}, n.prototype.remove = function () {var t = s (this.element); t.html (this._content), t.attr ( "style", this._styles)}, n.prototype.destroy = function () {this.remove (), s.removeData (this.element, i)}, s.fn [i] = function (e) {var t = this; if ( "instance"! == t.options) return t.each (function () {var t = s.data (this, i); if ( "string"=== s.type (e)) {if (void 0 === t) return; switch (e) {case "redraw": return t.draw (); case "remove":return t.remove (); case "destroy": return t.destroy (); default : return}} "undefined"== s.type (t) && (t = new n (this, e), s.data (this, i, t))}), t; var o = []; return t.each (function () {o.push (s.data (t, i))}), 1 === o. length? o [0] : o}, window.mapifyInit = function () {void 0! == window.mapifyMaps && s.each (window.mapifyMaps, function (t, e) {e.draw ()})}, s (window) .on ( "resize", function () {window.clearTimeout (e), e = setTimeout (function () {s (window) .trigger (t)}, 100)})} (jQuery);function () {window.clearTimeout (e), e = setTimeout (function () {s (window) .trigger (t)}, 100)})} (jQuery);function () {window.clearTimeout (e), e = setTimeout (function () {s (window) .trigger (t)}, 100)})} (jQuery);
